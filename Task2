using System;
using System.IO;

namespace Task2
{
    enum Severity
    {
        Trace,
        Debug,
        Information,
        Warning,
        Error,
        Critical,
        SeverityMax
    }
    class Program
    {
        public sealed class Logger : IDisposable
        {
            private readonly StreamWriter _logger;

            public Logger(string filePath)
            {
                _logger = new StreamWriter(filePath);
            }

            public void Write(string logMessage, Severity severityLevel)
            {
                _logger.WriteLine($"[{DateTime.Now.ToString("MM/dd/yyyy H:mm")}][{severityLevel}]: {logMessage}");
            }

            public void Dispose()
            {
                _logger.Dispose();
                GC.SuppressFinalize(this);
            }

            ~Logger()
            {
                _logger.Dispose();
            }
        }
        static void Main()
        {
            Console.WriteLine("Enter file path for logger:");
            string filePath = Console.ReadLine();
            Logger logger = new Logger(filePath);

            using (logger)
            {
                for(Severity item = Severity.Trace; item < Severity.SeverityMax; item++)
                {
                    logger.Write($"Message {(int)item}:", item);
                }
            }
            
        }
    }
}
